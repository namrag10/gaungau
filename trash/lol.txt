private boolean sortOutRHS(){
        ArrayList<String> keysPresent = new ArrayList<String>();
        ArrayList<String> RHSSectioned = new ArrayList<String>();


        String[][] relevant = new String[][]{operands, operators};
        for (String[] keys : relevant)
            for(String key : keys)
                if(rhs.indexOf(key) > -1){
                    keysPresent.add(key);
                }
        
        if(keysPresent.size() > 0){
            int cursor = 0;
            int keyLen = 0;
            for (String key : keysPresent) {
                int index = Integer.parseInt(key);
                RHSSectioned.add(rhs.substring(cursor, index));
                RHSSectioned.add(key);
                cursor = index;
                keyLen = key.length();
            }
            RHSSectioned.add(rhs.substring(cursor + keyLen));
        }else
            RHSSectioned.add(rhs);
        
        for (int i = 0; i < RHSSectioned.size() -1; i++) {
            String crnt = RHSSectioned.get(i);
            int addr = MemoryManager.has(crnt);
            if(addr > -1)
                RHSSectioned.set(i, "&" + addr);
        }


        return true;
    }